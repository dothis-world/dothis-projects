version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: dev-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/wait-for-it.sh:/wait-for-it.sh
      - ./nginx/docker-entrypoint.production.sh:/docker-entrypoint.production.sh
    command: /bin/bash -c "chmod +x /docker-entrypoint.production.sh && /docker-entrypoint.production.sh"
    ports:
      - "80:80"
    depends_on:
      - dev-server
    links:
      - dev-server
    networks:
      - dothis-network
  dev-server:
    image: node:20.9.0
    container_name: dev-api-server
    command: sh -c "npm install -g pnpm && cd ./app && pnpm config set store-dir ./.pnpm-store && pnpm install --frozen-lockfile && pnpm dev:back-end"
    env_file:
      - production.env
    volumes:
      - ../../package.json:/app/package.json
      - ../../turbo.json:/app/turbo.json
      - ../../pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ../../pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ../../.npmrc:/app/.npmrc
      - ../server/package.json:/app/apps/server/package.json
      - ../server:/app/apps/server
      - ../../config:/app/config
      - ../../packages:/app/packages
    ports:
      - "8080"
    restart: always
    networks:
      - dothis-network
  cache-redis:
    container_name: dothis-redis
    image: redis:latest
    restart: always
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - TZ=Asia/Seoul
    command: redis-server /usr/local/conf/redis.conf
    volumes:
      - ./db/redis/data:/data
      - ./db/redis/conf/redis.conf:/usr/local/conf/redis.conf
    ports:
      - 6379:6379
    networks:
      - dothis-network

networks:
  dothis-network: