name: CI-CD

on:
  pull_request:
    branches: [ deploy ]

jobs:
  build:
    name: Build, Deploy to S3 Bucket
    runs-on: ubuntu-latest
    
    env:
      working-directory: ./apps/back-end

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Npm Setup & Build
        run : | 
         cd ${{ env.working-directory }} && npm install 
         
      - name: build server files
        working-directory: ${{ env.working-directory }}
        run: |
          npm run build
          
      - name: create env file
        working-directory: ${{ env.working-directory }}
        run: |
          pwd
          touch .env
          echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} >> .env
          echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> .env
          echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_SCHEMA=${{ secrets.DB_SCHEMA }} >> .env
          cat .env
          
      - name: zip file
        working-directory: ${{ env.working-directory }}
        run: zip -r dothisBackEnd.zip ./dist ./scripts ./appspec.yml ./.env ./package.json
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./dothis.tar.gz ${{ secrets.AWS_S3_BUCKET_NAME }}
        working-directory: ${{ env.working-directory }}
        
      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name github-action
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name github-action-group
          --s3-location bucket=dothis,bundleType=zip,key=git-archive/dothisBackEnd.zip
